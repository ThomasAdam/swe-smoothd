--- a/Makefile
+++ b/Makefile
@@ -1,12 +1,8 @@
 
 CXXFLAGS = $(CFLAGS)
-# where to find it - relative path
-IPTABLES_SRC_DIR = ../../iptables/iptables-$(IPTABLES_VER)
-# where the IPT shared libs live
-IPT_LIB_DIR = /usr/lib/iptables
 
 OBJS=
-LIB_OBJS = module.o UDSocket.o pid.o setuid.o config.o ipbatch.o ipbatchc.o $(IPTABLES_SRC_DIR)/iptables.o $(IPTABLES_SRC_DIR)/libiptc/libiptc.a
+LIB_OBJS = module.o UDSocket.o pid.o setuid.o config.o ipbatch.o ipbatchc.o
 MAIN = main.cpp
 LIBS = -Wl,-rpath=/usr/lib/swe3/smoothd libsmoothd.so
 BIN = swe3-smoothd
--- a/ipbatchc.c
+++ b/ipbatchc.c
@@ -10,7 +10,6 @@
 #include <stdio.h>
 #include <stdarg.h>
 #include <stdlib.h>
-#include <iptables.h>
 #include <errno.h>
 #include <syslog.h>
 
@@ -19,8 +18,6 @@
 // no iptables command can have more parts to it than this!
 #define MAX_ARGS 100
 
-static char * table = "filter";
-static iptc_handle_t handle = NULL;
 static char prev_table_name[TABLE_NAME_SIZE] = "";
 
 // see what table is mentioned in this command - if it is different need to
@@ -54,23 +51,10 @@
 
 int execute( char * commands )
 {
-	/* split the command into an array of the appropriate */
 	int rval = 0;
-	char * arguments[ MAX_ARGS ];
-	
-	char * current_reference;
-	int counter;
-	
-	// syslog(LOG_WARNING, "executing %s\n", commands); 
-	for (counter=0, current_reference = strtok( commands, " " );
-			 counter < MAX_ARGS && current_reference != NULL;
-			 current_reference = strtok( NULL, " " ) )
-		arguments[ counter++ ] = current_reference;
-	arguments[counter] = 0; // mate it pleasant for the debugger
-	
-	// call down to iptables
-	rval = do_command( counter, arguments, &table, &handle );
-	// syslog(LOG_WARNING, "executing %s rval = %d\n", commands, rval);
+
+	rval = system(commands);
+
 	return rval;
 	
 }
@@ -89,12 +73,14 @@
 
 	if(size <= 0 || store == NULL)
 		return 1;
+/*
 	program_name = "ipbatch";
 	// this is really important for locating shared libs
 	program_version = IPTABLES_VERSION;
 	lib_dir = getenv("IPTABLES_LIB_DIR");
 	if (!lib_dir)
 		lib_dir = IPT_LIB_DIR;
+*/
 	pos = store; // start at beginning
 	while(pos < &store[size] && (eol = index(pos,'\n')) != NULL) {
 		linelen = eol - pos;
@@ -110,7 +96,7 @@
 				pos += size;
 			if(!have_committed) {
 				if(table_changed(linebuf)) {
-					error =  iptc_commit(&handle);
+					// error =  iptc_commit(&handle);
 					have_committed = 1;
 				}
 			}
@@ -130,10 +116,12 @@
 		}
 	}
 
+/*
 	if(!have_committed) {
 		error =  iptc_commit(&handle);
 		// syslog(LOG_WARNING, "have committed 2\n");
 	}
+*/
 	      
 	return !error;
 
